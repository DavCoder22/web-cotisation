{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, withModifiers as _withModifiers, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[28] || (_cache[28] = _createElementVNode(\"h1\", null, \"Cotizador de Impresión 3D\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[11] || (_cache[11] = _withModifiers((...args) => $options.cotizar && $options.cotizar(...args), [\"prevent\"]))\n  }, [_cache[15] || (_cache[15] = _createElementVNode(\"label\", null, \"Largo del modelo (cm):\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.largo = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.form.largo]]), _cache[16] || (_cache[16] = _createElementVNode(\"label\", null, \"Ancho del modelo (cm):\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.form.ancho = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.form.ancho]]), _cache[17] || (_cache[17] = _createElementVNode(\"label\", null, \"Alto del modelo (cm):\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.form.alto = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.form.alto]]), _cache[18] || (_cache[18] = _createElementVNode(\"label\", null, \"Densidad de infill (%):\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.form.densidad_infill = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.form.densidad_infill]]), _cache[19] || (_cache[19] = _createElementVNode(\"label\", null, \"Velocidad de impresión (mm/s):\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.form.velocidad_impresion = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.form.velocidad_impresion]]), _cache[20] || (_cache[20] = _createElementVNode(\"label\", null, \"Tipo de filamento:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.form.tipo_filamento = $event),\n    required: \"\"\n  }, _cache[13] || (_cache[13] = [_createElementVNode(\"option\", {\n    value: \"pla\"\n  }, \"PLA\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"ptge\"\n  }, \"PTGE\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"abs\"\n  }, \"ABS\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"tpu\"\n  }, \"TPU\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.form.tipo_filamento]]), _cache[21] || (_cache[21] = _createElementVNode(\"label\", null, \"¿Requiere acabados?\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.form.acabados = $event),\n    required: \"\"\n  }, _cache[14] || (_cache[14] = [_createElementVNode(\"option\", {\n    value: \"true\"\n  }, \"Sí\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"false\"\n  }, \"No\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.form.acabados]]), _cache[22] || (_cache[22] = _createElementVNode(\"label\", null, \"Tiempo de impresión (horas):\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.form.tiempo_impresion = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.form.tiempo_impresion]]), _cache[23] || (_cache[23] = _createElementVNode(\"label\", null, \"Peso del modelo (g):\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.form.peso_modelo = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.form.peso_modelo]]), _cache[24] || (_cache[24] = _createElementVNode(\"label\", null, \"Filamento consumido (metros):\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.form.filamento_consumido = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.form.filamento_consumido]]), _cache[25] || (_cache[25] = _createElementVNode(\"label\", null, \"Costo de envío:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $data.form.costo_envio = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.form.costo_envio]]), _cache[26] || (_cache[26] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Calcular Cotización\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), $data.cotizacion ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[27] || (_cache[27] = _createElementVNode(\"h2\", null, \"Resultado de la Cotización\", -1 /* HOISTED */)), _createElementVNode(\"pre\", null, _toDisplayString($data.cotizacion), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[12] || (_cache[12] = (...args) => $options.guardarPedido && $options.guardarPedido(...args))\n  }, \"Confirmar Pedido\")])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","cotizar","type","$event","$data","form","largo","required","ancho","alto","densidad_infill","velocidad_impresion","tipo_filamento","value","acabados","tiempo_impresion","peso_modelo","filamento_consumido","costo_envio","cotizacion","_hoisted_1","_toDisplayString","onClick","guardarPedido","_createCommentVNode"],"sources":["D:\\web-cotizador\\frontend\\src\\components\\Cotizador.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Cotizador de Impresión 3D</h1>\n    <form @submit.prevent=\"cotizar\">\n      <label>Largo del modelo (cm):</label>\n      <input type=\"number\" v-model=\"form.largo\" required />\n\n      <label>Ancho del modelo (cm):</label>\n      <input type=\"number\" v-model=\"form.ancho\" required />\n\n      <label>Alto del modelo (cm):</label>\n      <input type=\"number\" v-model=\"form.alto\" required />\n\n      <label>Densidad de infill (%):</label>\n      <input type=\"number\" v-model=\"form.densidad_infill\" required />\n\n      <label>Velocidad de impresión (mm/s):</label>\n      <input type=\"number\" v-model=\"form.velocidad_impresion\" required />\n\n      <label>Tipo de filamento:</label>\n      <select v-model=\"form.tipo_filamento\" required>\n        <option value=\"pla\">PLA</option>\n        <option value=\"ptge\">PTGE</option>\n        <option value=\"abs\">ABS</option>\n        <option value=\"tpu\">TPU</option>\n      </select>\n\n      <label>¿Requiere acabados?</label>\n      <select v-model=\"form.acabados\" required>\n        <option value=\"true\">Sí</option>\n        <option value=\"false\">No</option>\n      </select>\n\n      <label>Tiempo de impresión (horas):</label>\n      <input type=\"number\" v-model=\"form.tiempo_impresion\" required />\n\n      <label>Peso del modelo (g):</label>\n      <input type=\"number\" v-model=\"form.peso_modelo\" required />\n\n      <label>Filamento consumido (metros):</label>\n      <input type=\"number\" v-model=\"form.filamento_consumido\" required />\n\n      <label>Costo de envío:</label>\n      <input type=\"number\" v-model=\"form.costo_envio\" required />\n\n      <button type=\"submit\">Calcular Cotización</button>\n    </form>\n\n    <div v-if=\"cotizacion\">\n      <h2>Resultado de la Cotización</h2>\n      <pre>{{ cotizacion }}</pre>\n      <button @click=\"guardarPedido\">Confirmar Pedido</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { createClient } from \"@supabase/supabase-js\";\n\nconst supabase = createClient(\"https://tu-supabase-url.supabase.co\", \"tu-clave-publica\");\n\nexport default {\n  data() {\n    return {\n      form: {\n        largo: \"\",\n        ancho: \"\",\n        alto: \"\",\n        densidad_infill: \"\",\n        velocidad_impresion: \"\",\n        tipo_filamento: \"pla\",\n        acabados: \"false\",\n        tiempo_impresion: \"\",\n        peso_modelo: \"\",\n        filamento_consumido: \"\",\n        costo_envio: \"\",\n      },\n      cotizacion: null,\n    };\n  },\n  methods: {\n    async cotizar() {\n      try {\n        const response = await axios.post(\"http://localhost:5000/cotizar\", this.form);\n        this.cotizacion = response.data;\n      } catch (error) {\n        console.error(\"Error al calcular la cotización:\", error);\n      }\n    },\n    async guardarPedido() {\n      try {\n        const { error } = await supabase.from(\"pedidos\").insert([{ ...this.form, total: this.cotizacion.total }]);\n        if (error) throw error;\n        alert(\"Pedido guardado exitosamente.\");\n      } catch (error) {\n        console.error(\"Error al guardar el pedido:\", error);\n        alert(\"No se pudo guardar el pedido.\");\n      }\n    },\n  },\n};\n</script>\n\n<style>\nform {\n  display: flex;\n  flex-direction: column;\n  max-width: 400px;\n}\nlabel {\n  margin-top: 10px;\n}\nbutton {\n  margin-top: 20px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}